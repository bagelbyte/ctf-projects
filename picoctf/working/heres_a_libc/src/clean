#!/bin/python3

def replace_items(text: str, items: list, header_file: str = None) -> str:
    include_header = False
    before = None
    for each in items:
        before = text
        text = text.replace(each[0], each[1])

        if before != text:
            include_header = True
    
    if include_header and header_file is not None:
        text = f"#include {header_file}\n" + text

    return text

with open('vuln.c', 'r') as file:
    filedata = file.read()

#the general items/non libary specfic
filedata = replace_items(filedata, [
    ("uint", "unsigned int"), 
    ("ulong", "unsigned long"), 
    ("byte", "unsigned char"),
    ("undefined ", "char ")
])

#stdint.h
filedata = replace_items(filedata, [
    ("undefined8 ", "int64_t "),
    ("undefined2 ", "int16_t "),
    ("undefined4 ", "int32_t ")
], "<stdint.h>")

#stdio.h
filedata = replace_items(filedata, [
    ("__isoc99_scanf", "scanf"),
], "<stdio.h>")


#add some common defines
filedata = "#define true 1\n" + filedata

with open('vuln_replaced.c', 'w') as file:
    file.write(filedata)
with open('vuln_todo.c', 'w') as file:
    file.write(filedata)